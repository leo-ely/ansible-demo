name: "Ansible Azure deployment"

on:
  workflow_call:

env:
  ANSIBLE_HOST_KEY_CHECKING: False
  LOCATION: ${{ vars.AZURE_LOCATION }}

jobs:
  playbook-deploy:
    name: "Ansible Playbook Deploy"
    runs-on: ubuntu-latest
    environment: azure-production
    concurrency: azure-production
    defaults:
      run:
        working-directory: ./.ansible/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Azure Authentication
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Fetch connection string from Azure
        uses: azure/cli@v2
        with:
          inlineScript: |
            connection=$(az storage account show-connection-string -n actionsterraformstorage -g terraform-resource-group --output tsv)
            echo "AZURE_STORAGE_CONNECTION_STRING=$(echo $connection)" >> $GITHUB_ENV

      - name: Fetch SSH key file from Storage Blob
        uses: azure/cli@v2
        with:
          inlineScript: |
            az storage blob download -c terraform-files -n vm_key.pem -f ${{ github.workspace }}/vm_key.pem
      - name: Set SSH key permission
        run: |
          sudo mv ${{ github.workspace }}/vm_key.pem ./vm_key.pem
          sudo chown runner:docker ./vm_key.pem
          chmod 400 ./vm_key.pem

      - name: Fetch Virtual Machines inventory file from Storage Blob
        uses: azure/cli@v2
        with:
          inlineScript: |
            az storage blob download -c terraform-files -n azure-vm-inventory.json -f azure-vm-inventory.json
      - name: Set inventory file permission
        run: |
          sudo mv ${{ github.workspace }}/azure-vm-inventory.json ./azure-vm-inventory.json
          sudo chown runner:docker ./azure-vm-inventory.json
          chmod 755 ./azure-vm-inventory.json
      - name: Parse JSON file
        run: |
          jq -r '.vm_instances[]' azure-vm-inventory.json | while read ip; do
            echo "        azure-vm-$ip:" >> inventories/azure.yml
            echo "          ansible_host: $ip" >> inventories/azure.yml
          done
      - name: Append SSH configuration to inventory
        run: |
          echo "          ansible_user: test-user" >> inventories/azure.yml
          echo "          ansible_ssh_private_key_file: ${{ github.workspace }}/vm_key.pem" >> inventories/azure.yml

      - name: Ansible Setup
        run: |
          sudo apt update && sudo apt install -y ansible python3-pip
          pip install azure-mgmt-compute azure-mgmt-network azure-mgmt-resource ansible[azure]

      - name: Apply Ansible Playbook
        run: ansible-playbook -i ./inventories/azure.yml ./playbooks/azure.yml
